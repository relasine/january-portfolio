{"version":3,"sources":["components/Header/Header.js","content/about.js","components/About/About.js","components/Project/Project.js","content/projects.js","components/Portfolio/Portfolio.js","components/Blog/Blog.js","content/blogs.js","components/Blogs/Blogs.js","components/Footer/Footer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","about","About","details","map","point","index","key","concat","src","alt","Project","_this$props$data","this","props","data","title","imagePath","repo","deployed","href","rel","target","projects","Portfolio","myProjects","project","components_Project_Project","Blog","link","blogs","id","Blogs","myBlogs","blog","components_Blog_Blog","Footer","App","components_Header_Header","components_About_About","components_Portfolio_Portfolio","components_Blogs_Blogs","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36557cba.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Header.scss\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <section className=\"header-frame\">\n          <div className=\"name-frame\">\n            <h1 className=\"header-name\">Kevin Simpson</h1>\n            <h4 className=\"header-subtitle\">Front End Developer</h4>\n          </div>\n        </section>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","export const about = [\n  \"I'm Kevin Simpson, a front end developer living in the north Denver metro area. I am a tenacious problem solver with a passion for React, CSS, unit testing, and teaching.\",\n  \"I push myself to learn something new about programming every day, and I take criticism with humility and grace.\",\n  \" In my free time I am a husband and father who enjoys chasing my son around the house, Mario Kart marathons, and 90s-era JRPGs.\"\n];\n","import React, { Component } from \"react\";\nimport \"./About.scss\";\n\nimport { about } from \"../../content/about\";\n\nclass About extends Component {\n  render() {\n    const details = about.map((point, index) => {\n      return (\n        <p key={`about ${index}`}>\n          {point} <br />\n          <br />\n        </p>\n      );\n    });\n    return (\n      <div className=\"about-wrapper\">\n        <section className=\"about-section\">\n          <article className=\"about-hero\">\n            <h2>about me</h2>\n            <img\n              className=\"hero-img\"\n              src=\"./images/ksheadshotsmol.jpg\"\n              alt=\"kevin simpson\"\n            />\n          </article>\n          <article className=\"about-details\">\n            <div>{details}</div>\n          </article>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport \"./Project.scss\";\n\nclass Project extends Component {\n  render() {\n    const { title, imagePath, repo, deployed, details } = this.props.data;\n    return (\n      <article className=\"project\">\n        <img src={imagePath} alt={title} className=\"project=image\" />\n        <h4 className=\"project-title\">{title}</h4>\n        <a\n          href={repo}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          className=\"project-repo\"\n        >\n          project repo\n        </a>\n        <a href={deployed} className=\"project-deployed\">\n          deployed application\n        </a>\n        <p>{details}</p>\n      </article>\n    );\n  }\n}\n\nexport default Project;\n","export const projects = [\n  {\n    title: \"Pitch Battles\",\n    imagePath: \"./images/pitch-battles.png\",\n    repo: \"https://github.com/relasine/pitch-battles-frontend\",\n    deployed: \"https://pitchbattles.herokuapp.com\",\n    details:\n      \"Pitch Battles is a full stack application designed as a highly-gamified teaching tool for young musicians learning to read music. It features dual interfaces for both teacher and student, a React Native teacher portal, student stat tracking, leaderboards and more.\"\n  },\n  {\n    title: \"Jedi Access Archives\",\n    imagePath: \"./images/swapibox.png\",\n    repo: \"https://github.com/relasine/SWAPIBox\",\n    deployed: \"https://relasine.github.io/SWAPIBox/\",\n    details:\n      \"Jedi Access Archives is an interactive, narrative application experience built to allow users to explore information related to the Star Wars universe utilizing the Star Wars API.\"\n  },\n  {\n    title: \"Colorado Kindercount\",\n    imagePath: \"./images/kindercount.png\",\n    repo: \"https://github.com/relasine/headcount2.0\",\n    deployed: \"https://relasine.github.io/headcount2.0/\",\n    details:\n      \"Colorado Kindercount is a React application used to sort, display, and compare test score information for different Colorado school districts.\"\n  }\n];\n","import React, { Component } from \"react\";\nimport \"./Portfolio.scss\";\n\nimport Project from \"../Project/Project\";\nimport { projects } from \"../../content/projects\";\n\nclass Portfolio extends Component {\n  render() {\n    const myProjects = projects.map(project => {\n      return <Project data={project} key={project.title} />;\n    });\n\n    return (\n      <section className=\"portfolio-section\">\n        <h1>Portfolio</h1>\n        <div className=\"projects-wrapper\">{myProjects}</div>\n      </section>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from \"react\";\nimport \"./Blog.scss\";\n\nclass Blog extends Component {\n  render() {\n    const { title, imagePath, link } = this.props.data;\n    return (\n      <article className=\"blog\">\n        <a href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n          <img src={imagePath} alt=\"blog preview image\" />\n\n          <h4>{title}</h4>\n        </a>\n      </article>\n    );\n  }\n}\n\nexport default Blog;\n","export const blogs = [\n  {\n    id: \"blog 1\",\n    title: \"16-bit Sprite Animation in CSS\",\n    imagePath: \"./images/animation-article.png\",\n    link:\n      \"https://medium.com/@relasine/16-bit-sprite-animation-in-css-9cf8f36550d9\"\n  }\n];\n","import React, { Component } from \"react\";\nimport \"./Blogs.scss\";\n\nimport Blog from \"../Blog/Blog\";\nimport { blogs } from \"../../content/blogs\";\n\nclass Blogs extends Component {\n  render() {\n    const myBlogs = blogs.map(blog => {\n      return <Blog data={blog} key={blog.id} />;\n    });\n    return (\n      <section className=\"blogs-section\">\n        <h2>Blogs</h2>\n        <div className=\"blog-wrapper\">{myBlogs}</div>\n      </section>\n    );\n  }\n}\n\nexport default Blogs;\n","import React, { Component } from \"react\";\n\nimport \"./Footer.scss\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <section className=\"footer\">\n        <div className=\"social-icons\">\n          <a\n            href=\"https://www.linkedin.com/in/kevinjohnsimpson/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-linkedin\" />\n          </a>\n          <a\n            href=\"https://www.github.com/relasine/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-github\" />\n          </a>\n          <a\n            href=\"https://www.twitter.com/relasine/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-twitter\" />\n          </a>\n        </div>\n        <a\n          href=\"https://docs.google.com/document/d/188aGmw_v47ugDNWau8qPsNtYaroqE2WWf0EwCevmQYE/edit?usp=sharing\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          resume\n        </a>\n        <p>Kevin Simpson ©2019 All Rights Reserved</p>\n      </section>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\n\nimport Header from \"../Header/Header\";\nimport About from \"../About/About\";\nimport Portfolio from \"../Portfolio/Portfolio\";\nimport Blogs from \"../Blogs/Blogs\";\nimport Footer from \"../Footer/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <About />\n        <Portfolio />\n        <Blogs />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}